name: AdGuard DNS filter

on:
  schedule:
    - cron: "50 18 * * *"

  workflow_dispatch:

jobs:
  extract_lines:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@main
      
      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Extract lines and create DNS file
        run: |
          python - <<EOF
          import requests
          import os

          url = "https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt"
          response = requests.get(url)
          lines = response.text.split("\n")

          # 过滤
          filtered_lines = [line[2:-1] for line in lines if line.startswith("||") and line[-2].isalpha()]
          filtered_lines_whitelist = [line[4:-2] for line in lines if line.startswith("@@||") and line[-3].isalpha()]

          # 创建文件
          output_dir = "autoupdate"
          os.makedirs(output_dir, exist_ok=True)
          output_file = os.path.join(output_dir, "AdGuard.yaml")
          output_file_whitelist = os.path.join(output_dir, "AdGuardWhitelist.yaml")

          with open(output_file, "w") as f:
              f.write("payload:\n")
              f.write(f"  # Blocklist of https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt\n")
              f.write(f"  # get {len(filtered_lines)} domain from AdGuard DNS filter\n")
              f.write("  # " + lines[5][2:] + "\n")
              for line in filtered_lines:
                  f.write(f"  - '+.{line}'\n")

          with open(output_file_whitelist, "w") as f:
              f.write("payload:\n")
              f.write(f"  # Whitelist of https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt\n")
              f.write(f"  # get {len(filtered_lines_whitelist)} domain from AdGuard DNS filter\n")
              f.write("  # " + lines[5][2:] + "\n")
              for line in filtered_lines_whitelist:
                  f.write(f"  - '+.{line}'\n")

          print("Extraction complete.")
          EOF
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add autoupdate/*.yaml
          git commit -m "$(date -u +"%Y-%m-%d %H:%M:%S" -d "+8 hours")"
          git push
